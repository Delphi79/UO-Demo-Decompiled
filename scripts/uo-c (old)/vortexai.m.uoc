// UO-C (old)
include nrgyvrtxbase;

scriptvar list Q67L;
scriptvar list Q67K;
scriptvar list Q5CD;
scriptvar list Q5CC;
scriptvar obj Q67S;
scriptvar integer Q4G9;
scriptvar obj trackee;

extern void Q5YK();
extern void Q4TV(obj victim);
extern void Q4GJ(obj victim, integer damage);
extern void Q5GP();
extern void Q4DH(integer Q68Q);
extern void Q4BQ();

on creation()
{
  if(random(0x00, 0x01F4) == 0x2A)
  {
    setType(this, 0xDC);
  }
  Q67S = this;
  location Q4VS = getLocation(Q67S);
  setMaxFatigue(Q67S, 0x03E7);
  setCurFatigue(Q67S, 0x03E7);
  enableBehaviors(Q67S);
  getMobsInRange(Q67L, Q4VS, 0x06);
  for(integer Q5GY; Q5GY < numInList(Q67L); Q5GY ++)
  {
    setItem(Q67K, 0x01, Q5GY);
  }
  Q4BQ();
  integer Q68Q = 0x00;
  Q4DH(Q68Q);
  if(0x00 < numInList(Q67L))
  {
    callback(Q67S, 0x05, 0x2F);
    Q5YK();
  }
  else
  {
    callback(Q67S, 0x05, 0x2F);
    shortcallback(Q67S, 0x01, 0x35);
  }
  return(0x00);
}

function void Q4DH(integer Q68Q)
{
  if(Q68Q == 0x00)
  {
    if(0x00 < numInList(Q67L))
    {
      for(integer Q629 = 0x00; Q629 < numInList(Q67L); Q629 ++)
      {
        integer Q61S = getObjType(Q67L[Q629]);
        if(Q61S == 0x0335)
        {
          removeItem(Q67L, Q629);
          removeItem(Q67K, Q629);
        }
      }
    }
  }
  else
  {
    if(0x00 < numInList(Q5CD))
    {
      for(Q629 = 0x00; Q629 < numInList(Q5CD); Q629 ++)
      {
        Q61S = getObjType(Q5CD[Q629]);
        if(Q61S == 0x0335)
        {
          removeItem(Q5CD, Q629);
          removeItem(Q5CC, Q629);
        }
      }
    }
  }
  return;
}

function void Q5YK()
{
  location Q4VS = getLocation(Q67S);
  integer Q4IK;
  location there;
  Q4BQ();
  if(0x00 == numInList(Q67L))
  {
    shortcallback(Q67S, 0x01, 0x35);
  }
  for(integer Q629 = 0x00; Q629 < numInList(Q67L); Q629 ++)
  {
    if(isValid(Q67L[Q629]))
    {
      there = getLocation(Q67L[Q629]);
      Q4IK = getDistanceInTiles(Q4VS, there);
      if(Q4IK == 0x00)
      {
        Q4IK = 0x01;
      }
      integer intelligence = getIntelligence(Q67L[Q629]);
      integer skill = getSkillLevel(Q67L[Q629], 0x19);
      integer Q5XO = (intelligence + skill) / Q4IK;
      setItem(Q67K, Q5XO, Q629);
    }
    else
    {
      removeItem(Q67K, Q629);
      removeItem(Q67L, Q629);
    }
  }
  obj Q5KH;
  integer Q5KI;
  integer Q5KG;
  integer Q5KF;
  obj Q5D6;
  integer Q5D7;
  integer Q5D5;
  integer Q5D1 = numInList(Q67K);
  string Q5BB = Q5D1;
  for(integer Q4CW; Q4CW < numInList(Q67K); Q4CW ++)
  {
    for(integer Q5D4 = 0x00; Q5D4 < Q5D1; Q5D4 ++)
    {
      if(Q4CW < Q5D4)
      {
        if((Q67K[Q4CW]) < (Q67K[Q5D4]))
        {
          if(isValid(Q67L[Q4CW]))
          {
            Q5KI = Q67K[Q4CW];
            Q5KH = Q67L[Q4CW];
            Q5D7 = Q67K[Q5D4];
            Q5D6 = Q67L[Q5D4];
            setItem(Q67K, Q5D7, Q4CW);
            setItem(Q67L, Q5D6, Q4CW);
            setItem(Q67K, Q5KI, Q5D4);
            setItem(Q67L, Q5KH, Q5D4);
          }
        }
        if((Q67K[Q4CW]) == (Q67K[Q5D4]))
        {
          if(isValid(Q67L[Q4CW]))
          {
            location Q5JP = getLocation(Q67L[Q4CW]);
            location Q5JQ = getLocation(Q67L[Q5D4]);
            integer Q4IM = getDistance(Q4VS, Q5JP);
            integer Q4IN = getDistance(Q4VS, Q5JQ);
            if(Q4IM > Q4IN)
            {
              Q5KI = Q67K[Q4CW];
              Q5KH = Q67L[Q4CW];
              Q5D7 = Q67K[Q5D4];
              Q5D6 = Q67L[Q5D4];
              setItem(Q67K, Q5D7, Q4CW);
              setItem(Q67L, Q5D6, Q4CW);
              setItem(Q67K, Q5KI, Q5D4);
              setItem(Q67L, Q5KH, Q5D4);
            }
          }
        }
      }
    }
  }
  Q4G9 = numInList(Q67L);
  obj Q455 = Q67L[0x00];
  Q4TV(Q455);
  return;
}

function void Q4TV(obj victim)
{
  location Q4VS = getLocation(Q67S);
  location there = getLocation(victim);
  trackee = victim;
  integer Q5R6 = getDistanceInTiles(Q4VS, there);
  if(Q5R6 < 0x01)
  {
    Q5R6 = 0x01;
    Q4GJ(victim, 0x1E);
  }
  else
  {
    walkTo(Q67S, there, 0x0E);
    shortcallback(Q67S, Q5R6, 0x34);
  }
  return;
}

function void Q4GJ(obj victim, integer damage)
{
  location Q4VS = getLocation(Q67S);
  sfx(Q4VS, 0x28, 0x00);
  if(!Q50G(victim))
  {
    return;
  }
  doDamageType(Q67S, victim, damage, 0x02);
  integer Q5VZ = 0x00 - 0x0A;
  integer Q4NC = 0xB4;
  for(integer s = 0x00; s < 0x03; s ++)
  {
    integer Q5NC = Q41Q(victim, s, Q5VZ, Q4NC);
  }
  return;
}

function void Q4BQ()
{
  for(integer Q629 = 0x00; Q629 < numInList(Q67L); Q629 ++)
  {
    integer Q4XM = getObjType(Q67L[Q629]);
    if((Q4XM == 0x0192) || (Q4XM == 0x0193))
    {
      removeItem(Q67L, Q629);
      removeItem(Q67K, Q629);
    }
  }
  return;
}

on callback<0x34>()
{
  location Q4VS = getLocation(Q67S);
  location there = getLocation(trackee);
  integer Q5R6 = getDistanceInTiles(Q4VS, there);
  if(Q5R6 <= 0x01)
  {
    Q4GJ(trackee, 0x0C);
    Q5YK();
  }
  else
  {
    getMobsInRange(Q5CD, Q4VS, 0x06);
    for(integer Q5GY; Q5GY < numInList(Q5CD); Q5GY ++)
    {
      setItem(Q5CC, 0x01, Q5GY);
    }
    integer Q68Q = 0x01;
    Q4DH(Q68Q);
    if(0x00 < numInList(Q5CD))
    {
      for(integer Q5CI; Q5CI < numInList(Q5CD); Q5CI ++)
      {
        integer Q4XM = getObjType(Q5CD[Q5CI]);
        if((Q4XM == 0x0192) || (Q4XM == 0x0193))
        {
          removeItem(Q5CD, Q5CI);
          removeItem(Q5CC, Q5CI);
          return(0x00);
        }
        obj Q5C9 = Q5CD[Q5CI];
        if(isInList(Q67L, Q5C9))
        {
          removeItem(Q5CD, Q5CI);
          removeItem(Q5CC, Q5CI);
        }
        else
        {
          appendToList(Q67L, Q5C9);
          appendToList(Q67K, 0x01);
        }
      }
    }
    if(Q4G9 == numInList(Q67L))
    {
      walkTo(Q67S, there, 0x0E);
      shortcallback(Q67S, Q5R6, 0x34);
      return(0x00);
    }
    if(numInList(Q67L) < 0x01)
    {
      shortcallback(Q67S, Q5R6, 0x35);
      return(0x00);
    }
    Q5YK();
  }
  return(0x00);
}

on callback<0x35>()
{
  location Q4VS = getLocation(Q67S);
  getMobsInRange(Q5CD, Q4VS, 0x06);
  for(integer Q5GY; Q5GY < numInList(Q5CD); Q5GY ++)
  {
    setItem(Q5CC, 0x01, Q5GY);
  }
  integer Q68Q = 0x01;
  Q4DH(Q68Q);
  if(0x00 < numInList(Q5CD))
  {
    for(integer Q5CI; Q5CI < numInList(Q5CD); Q5CI ++)
    {
      integer Q4XM = getObjType(Q5CD[Q5CI]);
      if((Q4XM == 0x0192) || (Q4XM == 0x0193))
      {
        removeItem(Q5CD, Q5CI);
        removeItem(Q5CC, Q5CI);
        return(0x00);
      }
      obj Q5C9 = Q5CD[Q5CI];
      if(isInList(Q67L, Q5C9))
      {
        removeItem(Q5CD, Q5CI);
        removeItem(Q5CC, Q5CI);
      }
      else
      {
        appendToList(Q67L, Q5C9);
        appendToList(Q67K, 0x01);
      }
    }
    Q5YK();
  }
  else
  {
    callback(Q67S, 0x02, 0x35);
  }
  return(0x00);
}

on enterrange<0x04>(obj target)
{
  if(!(isInList(Q67L, target)))
  {
    appendToList(Q67L, target);
    appendToList(Q67K, 0x00);
  }
  Q5YK();
  return(0x01);
}

on enterrange<0x00>(obj target)
{
  Q4GJ(target, 0x1E);
  Q5YK();
  return(0x01);
}

on callback<0x2F>()
{
  location Q4VS = getLocation(Q67S);
  sfx(Q4VS, 0x15, 0x00);
  shortcallback(Q67S, 0x03, 0x2F);
  return(0x00);
}